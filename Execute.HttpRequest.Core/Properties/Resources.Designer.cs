//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Execute.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Execute.HttpRequest.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] AngleSharp {
            get {
                object obj = ResourceManager.GetObject("AngleSharp", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;AngleSharp&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;T:AngleSharp.Attributes.Accessors&quot;&gt;
        ///            &lt;summary&gt;
        ///            The various DOM object accessor types.
        ///            &lt;/summary&gt;
        ///        &lt;/member&gt;
        ///        &lt;member name=&quot;F:AngleSharp.Attributes.Accessors.None&quot;&gt;
        ///            &lt;summary&gt;
        ///            Specifies that the property does not have any special meaning.
        ///            &lt;/summary&gt;
        ///        &lt;/member&gt;
        ///        &lt;member na [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AngleSharp_xml {
            get {
                return ResourceManager.GetString("AngleSharp.xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;Microsoft.AspNetCore.StaticFiles&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;T:Microsoft.AspNetCore.StaticFiles.DefaultFilesMiddleware&quot;&gt;
        ///            &lt;summary&gt;
        ///            This examines a directory path and determines if there is a default file present.
        ///            If so the file name is appended to the path and execution continues.
        ///            Note we don&apos;t just serve the file because it may require interpretation.
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Microsoft_AspNetCore_StaticFiles {
            get {
                return ResourceManager.GetString("Microsoft.AspNetCore.StaticFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] MimeKit {
            get {
                object obj = ResourceManager.GetObject("MimeKit", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;MimeKit&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;T:MimeKit.Cryptography.ApplicationPgpEncrypted&quot;&gt;
        ///            &lt;summary&gt;
        ///            A MIME part with a Content-Type of application/pgp-encrypted.
        ///            &lt;/summary&gt;
        ///            &lt;remarks&gt;
        ///            An application/pgp-encrypted part will typically be the first child of
        ///            a &lt;see cref=&quot;T:MimeKit.Cryptography.MultipartEncrypted&quot;/&gt; part and contains only a Version        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MimeKit_xml {
            get {
                return ResourceManager.GetString("MimeKit.xml", resourceCulture);
            }
        }
    }
}
